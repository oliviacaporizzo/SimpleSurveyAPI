swagger: "2.0"
info:
  version: '1.0.0'
  title: Simple Survey API

schemes:
 - https

consumes:
  - application/json

produces:
  - application/json

basePath: /simpleSurvey

paths:
  /create:
    post:
      tags:
        - create
      summary: Create new survey
      operationId: createSurvey
      parameters:
        - name: survey
          in: body
          description: an Object that contains the name of the survery, and a list of survey questions
          required: true
          schema:
            $ref: "#/definitions/Survey"
      responses:
        201:
          description: successfully created survey
          schema:
            type: object
            properties:
              id:
                type: string
                description: the unique id generated for the survey that was created
        500:
          description: unexpected error
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Create"
  /take/{surveyId}:
    get:
      tags:
        - take
      summary: Gets all the questions associated with survey name
      operationId: takeSurvey
      parameters:
        - name: surveyId
          in: path
          required: true
          description: the id of the survey to be taken
          type: string
      responses:
        200:
          description: successfully returned survey with questions
          schema:
            $ref: "#/definitions/Survey"
        404:
          description: could not find survey with surveyId specified
        500:
          description: unexpected error
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Take"
  /submit/{surveyId}:
    post:
      tags:
        - submit
      summary: adds a list of answers to survey
      operationId: submitAnswers
      parameters:
        - name: surveyId
          in: path
          required: true
          description: the id of the survey these answers correspond to
          type: string
        - name: answers
          in: body
          required: true
          description: "a list of 1's and 0's that represent Y/N answers to each question"
          schema:
            type: object
            properties:
              1:
                type: integer
      responses:
        201:
          description: successfully created new list of answers
        404:
          description: survey not found
        500:
          description: unexpected error
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Submit"
  /results:
    get: 
      tags:
        - "results"
      summary: gets a list of all surveys and all corresponding answers
      operationId: getAllResults
      responses:
        200:
          description: an array of all surveys with questions and answers    
          schema:
            type: array
            items:
              $ref: "#/definitions/Survey"
        500:
          description: unexpected error
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Results"
  /results/{surveyId}:
    get:
      tags:
        - "results"
      summary: gets a list of all the results from a particular survey
      operationId: getResults
      parameters:
        - name: surveyId
          in: path
          required: true
          description: the name of the survey
          type: string
      responses:
        200:
          description: returns a survey object that contains all answers for each question  
          schema:
            $ref: "#/definitions/Survey"
        404:
          description: survey not found
        500:
          description: unexpected error
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Results"

definitions:
  Survey:
    required:
      - name
      - questions
    properties:
      name:
        type: string
      questions:
        description: an object whose keys are the question number and values are an object with properties text (question text) and answers(list of answers to this question)
        type: object
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string